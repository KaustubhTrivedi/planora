version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: planora-postgres
    environment:
      POSTGRES_DB: planora
      POSTGRES_USER: planora
      POSTGRES_PASSWORD: planora123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - planora-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U planora -d planora"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: planora-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - planora-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: planora-backend
    environment:
      SPRING_PROFILES_ACTIVE: dev
      DATABASE_URL: jdbc:postgresql://postgres:5432/planora
      DATABASE_USERNAME: planora
      DATABASE_PASSWORD: planora123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: mySecretKey123456789012345678901234567890
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY:-}
      WEATHER_API_KEY: ${WEATHER_API_KEY:-}
      CURRENCY_API_KEY: ${CURRENCY_API_KEY:-}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET:-planora-documents-dev}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY:-}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY:-}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - planora-network
    volumes:
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # React Frontend (for development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: planora-frontend
    environment:
      REACT_APP_API_BASE_URL: http://localhost:8080/api
      REACT_APP_WEBSOCKET_URL: ws://localhost:8080/api/ws
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - planora-network
    depends_on:
      - backend

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  planora-network:
    driver: bridge